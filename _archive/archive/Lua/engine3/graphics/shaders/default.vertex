attribute vec3 vertex;
attribute vec2 texCoords;
attribute vec4 color;
attribute vec3 normal;

uniform mat4 matrixModel;
uniform mat4 matrixPV;

//uniform vec3 pos;
attribute vec3 inst_pos;
uniform vec3 size;

uniform vec4 fill;
uniform vec4 stroke;
uniform vec4 tint;

uniform int useLight;
uniform int useColor;
uniform int useTexture;

out vec3 vPosition;
out vec3 vNormal;
out vec4 vColor;
out vec2 vTexCoords;

void main() {
    vec3 vertexPosition = vertex * size + inst_pos;

    vec4 worldPosition = matrixModel * vec4(vertexPosition.xyz, 1.);
    vec4 worldNormal = matrixModel * vec4(normal, 0.0);

    vPosition = worldPosition.xyz;
    vNormal = worldNormal.xyz;

    if (useColor > 0) {
        vColor = color;
    } else {
        vColor = stroke;
    }
    vTexCoords = texCoords;

    gl_Position = matrixPV * worldPosition;
}
