uniform float iTime;

varying vec3 FragPos;
varying vec3 VaryingNormal;

vec3 lightPos;

vec3 ambient() {
    vec3 lightColor = vec3(1., 1., 1.);
    float ambientStrength = 0.5;
    
    vec3 ambient = ambientStrength * lightColor;
    return ambient;
}

vec3 diffuse() {
    vec3 lightColor = vec3(1., 1., 1.);
    
    vec3 norm = normalize(VaryingNormal);
    vec3 lightDir = normalize(lightPos - FragPos); 

    float diff = max(dot(norm, lightDir), 0.0);
    
    vec3 diffuse = diff * lightColor;
    return diffuse;
}

vec4 effect(vec4 color, Image tex, vec2 texture_coords, vec2 screen_coords)
{
    lightPos = vec3(cos(iTime), sin(iTime), -1.);

    vec4 texcolor = Texel(tex, texture_coords);
    
    vec4 result = vec4((diffuse()).xyz, 1.) * (texcolor * color);
    return result;
}



