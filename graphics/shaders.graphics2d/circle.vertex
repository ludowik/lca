attribute vec3 vertex;

uniform mat4 matrixModel;
uniform mat4 matrixPV;

attribute vec3 inst_pos;
attribute vec3 inst_size;

//out vec3 vPosition;
out vec2 vTexCoords;

void main() {
    vec3 vertexPosition = vertex + inst_pos;
    
    switch (gl_VertexID % 4) {
        case 0:
            vTexCoords = vec2( 1, -1);
            break;
        case 1:
            vTexCoords = vec2( 1,  1);
            break;
        case 2:
            vTexCoords = vec2(-1, -1);
            break;
        case 3:
            vTexCoords = vec2(-1,  1);
            break;
    }
    
    vertexPosition += inst_size * vec3(vTexCoords, 0.) / 2.;

    vec4 worldPosition = matrixModel * vec4(vertexPosition.xyz, 1.);
    
    //vPosition = worldPosition.xyz;

    gl_Position = matrixPV * worldPosition;
}
