attribute vec3 vertex;

attribute vec3 inst_pos;
attribute vec3 inst_size;

uniform mat4 matrixModel;
uniform mat4 matrixPV;

uniform vec3 pos;
uniform vec3 size;

out vec3 vPosition;
out vec2 vTexCoords;

void main() {
    vec3 vertexPosition = vertex * inst_size + inst_pos;
    gl_Position = matrixPV * matrixModel * vec4(vertexPosition.xyz, 1.);

    switch (gl_VertexID % 4) {
        case 0:
            vTexCoords = vec2( 1, -1);
            break;
        case 1:
            vTexCoords = vec2( 1,  1);
            break;
        case 2:
            vTexCoords = vec2(-1, -1);
            break;
        case 3:
            vTexCoords = vec2(-1,  1);
            break;
    }
}
